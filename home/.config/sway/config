# vi: ft=conf
############################
# Variables
############################
#
# Logo key.
set $mod Mod4
set $alt Mod1
# Home row direction keys, like vim. (i3 by default use j,k,l and semicolon)
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu rofi -show combi | xargs swaymsg exec --

set $disp0 "eDP-1"
set $disp1 "DP-1"
set $disp2 "DP-2"
set $disp3 "HDMI-A-1"

############################
# Output configuration
############################
#
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 14
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fit
# render_bit_depth 10
output $disp0 resolution 2560x1600 position 640 2160 scale 1
output $disp1 resolution 3840x2160 position 0 0 scale 1
output $disp2 resolution 3840x2160 position 0 0 scale 1
output $disp3 resolution 3840x2160 position 0 0 scale 1

workspace 1 output $disp0
workspace 3 output $disp0
workspace 5 output $disp0
workspace 2 output $disp3 $disp2 $disp1 $disp0
workspace 4 output $disp3 $disp2 $disp1 $disp0
workspace 6 output $disp3 $disp2 $disp1 $disp0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

############################
# Custom UI Settings:
############################
#
# make floating windows smaller
# floating_maximum_size 1920x1080

# Only enable gaps on a workspace when there is at least one container
# smart_gaps on
gaps inner 6
gaps outer 0
gaps top -3

# borders
# Activate smart borders (always)
smart_borders on
default_border pixel 2
# class                 border  backgr. text    indicator child_border
client.focused_inactive #131416 #131416 #888888 #131416 #131416
client.unfocused        #131416 #131416 #888888 #131416 #131416
client.focused          #FFFFFF #FFFFFF #FFFFFF #FFFFFF #FFFFFF
# for_window [class="^.*"] border pixel 2

############################
# Idle configuration
############################
#
# Example configuration:
#
exec swayidle -w \
         timeout 600 'swaylock -f -c 000000' \
         timeout 900 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

############################
# Input configuration
############################
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input type:keyboard {
    repeat_delay 300
    repeat_rate 30
    # https://www.reddit.com/r/commandline/comments/4gusjx/comment/d2lvni3/?utm_source=share&utm_medium=web2x&context=3
    # caps:ctrl_modifier and ctrl:nocaps are defined in symbols/capslock and symbols/ctrl respectively.
    # Looking at their definition it seems that ctrl_modifier will make Caps a Control modifier but still send the Caps_Lock keysym.
    # Whereas nocaps has Caps send the actual Control_L keysym.
    # xkb_options caps:ctrl_modifier
    xkb_options ctrl:nocaps
}
input 1:1:AT_Translated_Set_2_keyboard {
    xkb_options altwin:swap_lalt_lwin,ctrl:nocaps
}

input type:touchpad {
    tap enabled
    natural_scroll enabled
    scroll_factor 0.4
}

input type:pointer {
    accel_profile flat
    natural_scroll enabled
}

############################
# Key bindings
############################
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu
    bindsym $mod+Shift+d exec rofi -show window
    # rofi-emoji from AUR
    bindsym $mod+g exec rofi -show emoji
    bindsym $mod+c exec rofi -show calc -modi calc -no-show-match -no-sort > /dev/null

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload
    # restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
    #bindsym $mod+Shift+r restart
    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

    # bindsym Ctrl+g exec goldendict $(wl-paste)
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    bindsym $mod+Tab workspace back_and_forth
    workspace_auto_back_and_forth yes
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+x splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
    # focus the child container
    bindsym $mod+Shift+a focus child
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 20px
    bindsym $down resize grow height 20px
    bindsym $up resize shrink height 20px
    bindsym $right resize grow width 20px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 20px
    bindsym Down resize grow height 20px
    bindsym Up resize shrink height 20px
    bindsym Right resize grow width 20px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#
# Special keys:
#
    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
    bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym XF86MonBrightnessUp exec brightnessctl set 5%+
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous
    bindsym XF86Search exec bemenu-run

############################
# Status Bar:
############################
#
bar {
    swaybar_command waybar
}

include /etc/sway/config.d/*

############################
# autostart
############################
#exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec nm-applet --indicator

exec autotiling
exec fcitx5 -d
# exec deadd-notification-center
exec blueman-applet
exec variety
# Notification Daemon
exec swaync
exec wlsunset -S 06:00 -s 11:30 -T 6500 -t 4000 -d 1800
# sleep 3s to show tray icon in waybar
exec sleep 3 && nextcloud --background

############################
# custom binding
############################
# use variety to change wallpapers by interval.
bindsym $mod+$alt+n exec variety -n
bindsym $mod+$alt+p exec variety -p
# install profile-sync-daemon to cache profile dir. Also set a tmpfs cache dir.
# https://wiki.archlinux.org/title/Chromium#Native_Wayland_support
# https://wiki.archlinux.org/title/Wayland#Configuration_file
# btw --gtk-version=4 has no effect on sway/sway-im-git
bindsym $mod+n exec google-chrome-stable
bindsym $mod+m exec nautilus
bindsym $mod+Shift+m exec $term ranger
#bindsym $mod+Shift+m exec ranger

bindsym $mod+Shift+s exec grim -g "$(slurp)" - | wl-copy --type image/png
bindsym $mod+$alt+s exec grim -g "$(slurp)" "$HOME/Pictures/screenshots/$(date +%Y%m%d-%H%M%S).png"
bindsym $mod+p exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') "$HOME/Pictures/screenshots/$(date +%Y%m%d-%H%M%S).png"

# Toggle control center
bindsym $mod+Shift+n exec swaync-client -t -sw
# enter idle state immediately
bindsym $mod+Shift+p exec killall -SIGUSR1 swayidle

# Allow switching between workspaces with left and right swipes
bindgesture swipe:right workspace prev
bindgesture swipe:left workspace next
# Allow container movements by pinching them
bindgesture pinch:inward+up move up
bindgesture pinch:inward+down move down
bindgesture pinch:inward+left move left
bindgesture pinch:inward+right move right

############################
# custom window setting
############################
# swaymsg -t get_tree

# https://www.reddit.com/r/swaywm/comments/vuhr75/why_does_chromium_with_app_now_grab_complete/
for_window [app_id="^chrome-.*"] shortcuts_inhibitor disable
for_window [class="GoldenDict"] floating enable
for_window [class="mpv"] floating enable
